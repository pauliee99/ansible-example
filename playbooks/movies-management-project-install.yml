---
- hosts: deploymentservers

  vars:
    app_dir: "{{user_dir}}/movies-management-project"
    git_repo_url: "https://github.com/panagiotisbellias/movies-management-project.git"
    git_repo_branch: "main"

  tasks:

  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"

  - name: clone django project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      force: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: install and activate virtual environment
    block:
    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3
    rescue:
    - name: "APT - install misc packages"
      apt:
        name: [python3, python3-pip, python3-virtualenv, virtualenv]
        update_cache: yes
      become: yes
      become_user: root
      when: hostvars[inventory_hostname].ansible_distribution == 'Ubuntu'
    always:

    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3

    - name: copy django service file
      template:
        src: ../files/django/gunicorn.service.j2
        dest: "/etc/systemd/system/gunicorn.service"
      become: yes
      become_user: root
      notify: gunicorn service restart

    - name: ensure gunicorn service started
      service:
        name: gunicorn
        state: started
        enabled: yes
      become: yes


    handlers:
      - name: restart gunicorn
        service:
          name: gunicorn
          state: restarted
        become: yes

      - name: copy nginx conf file
        template:
          src: ../files/nginx/demo.nginx
          dest: "/etc/nginx/sites-available/demo"

      - name: enable demo site in nginx
        file:
          src: "/etc/nginx/sites-available/demo"
          dest: "/etc/nginx/sites-enabled/demo"
          state: link
        notify: restart nginx

      - name: de-activate default nginx site
        file:
          path: /etc/nginx/sites-enabled/default
          state: absent
        notify: restart nginx

      - name: restart demo
        service:
          name: demo
          state: restarted

      - name: restart nginx
        service:
          name: nginx
          state: restarted
