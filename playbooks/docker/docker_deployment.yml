---
- hosts: deploymentservers
  become: true
  vars:
    mysql_container_name: MySQLserver
    mysql_container_image: mysql
    db_container_name: movie-database
    db_container_image: belpanos/movie-db
    mail_container_name: movie-mail-system
    mail_container_image: belpanos/movie-mailing
    project_container_name: movies-management-project
    project_container_image: belpanos/movie-main-system

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull mysql Docker image
      docker_image:
        name: "{{ mysql_container_image }}"
        source: pull

    - name: Create mysql container
      docker_container:
        name: "{{ mysql_container_name }}"
        image: "{{ mysql_container_image }}"
        state: present
        ports:
         - "3306:3306"
        volumes:
         - /mysql_data

    - name: Pull db Docker image
      docker_image:
        name: "{{ db_container_image }}"
        source: pull

    - name: Create db container
      docker_container:
        name: "{{ db_container_name }}"
        image: "{{ db_container_image }}"
        state: present
        ports:
         - "3000:3000"
        volumes_from:
         - "{{ mysql_container_name }}"

    - name: Pull mailing Docker image
      docker_image:
        name: "{{ mail_container_image }}"
        source: pull

    - name: Create mailing container
      docker_container:
        name: "{{ mail_container_name }}"
        image: "{{ mail_container_image }}"
        state: present
        ports:
         - "5000:5000"
        volumes:
         - /mail_data

    - name: Pull Main Docker image
      docker_image:
        name: "{{ project_container_image }}"
        source: pull

    - name: Create main container
      docker_container:
        name: "{{ project_container_name }}"
        image: "{{ project_container_image }}"
        state: present
        ports:
         - "80:8080"
        volumes:
         - /movies_data

    - name: Starting mysql container
      docker_container:
        name: "{{ mysql_container_name }}"
        image: "{{ mysql_container_image }}"
        state: started
        env:
            MYSQL_ROOT_PASSWORD: "{{ DB_ROOT_PASSWD }}"
            MYSQL_DATABASE: "{{ DB_NAME }}"
            MYSQL_USER: "{{ DB_USER }}"
            MYSQL_PASSWORD: "{{ DB_PASSWD }}"

    - name: Starting db container
      docker_container:
        name: "{{ db_container_name }}"
        image: "{{ db_container_image }}"
        state: started
        env:
            SECRET_KEY: "{{ DB_SECRET_KEY }}"
            DB_NAME: "{{ DB_NAME }}"
            DB_USER: "{{ DB_USER }}"
            DB_PASSWORD: "{{ DB_PASSWD }}"
            DB_HOST: "{{ DB_HOST }}"
            DB_PORT: "{{ DB_PORT }}"

    - name: Starting mail container
      docker_container:
        name: "{{ mail_container_name }}"
        image: "{{ mail_container_image }}"
        state: started
        env:
            SECRET_KEY: "{{ MAIL_SECRET_KEY }}"
            DATABASE_URL: 'sqlite:///./db.sqlite3'
            EMAIL_USER: "{{ MAIL_USER }}"
            EMAIL_PASSWD: "{{ MAIL_PASSWD }}"
            EMAIL_DB_URL_PORT: "{{ DB_FULL_URL }}"

    - name: Starting project container
      docker_container:
        name: "{{ project_container_name }}"
        image: "{{ project_container_image }}"
        state: started
        env:
            SECRET_KEY: "{{ MOVIES_SECRET_KEY }}"
            DATABASE_URL: 'sqlite:///./db.sqlite3'
            MOVIES_DB_URL_PORT: "{{ DB_FULL_URL }}"
            EMAIL_SYSTEM_URL_PORT: "{{ MAIL_URL }}"
