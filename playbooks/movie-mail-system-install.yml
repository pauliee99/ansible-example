---
- hosts: deploymentservers

  vars:
    app_dir: "{{user_dir}}/movie-mail-system"
    git_repo_url: "https://github.com/panagiotisbellias/movie-mail-system.git"
    git_repo_branch: "main"

  tasks:
  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"

  - name: clone django project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: copy env file
    shell: "cp {{app_dir}}/mailing_system/mailing_system/.env.example {{app_dir}}/mailing_system/mailing_system/.env"

  - name: populate ~/.env
    ansible.builtin.lineinfile:
      dest: "{{app_dir}}/mailing_system/mailing_system/.env"
      state: present
      regexp: "^SECRET_KEY="
      line: SECRET_KEY="{{ MAIL_SECRET_KEY }}"
      regexp: "^DATABASE_URL="
      line: DATABASE_URL='sqlite:///./db.sqlite3'
      regexp: "^EMAIL_USER="
      line: EMAIL_USER="{{ MAIL_USER }}"
      regexp: "^EMAIL_PASSWD="
      line: EMAIL_PASSWD="{{ MAIL_PASSWD }}"
      regexp: "^EMAIL_DB_URL_PORT="
      line: EMAIL_DB_URL_PORT="{{ DB_FULL_URL }}"

  - name: install and activate virtual environment
    block:
    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3
    rescue:
    - name: "APT - install misc packages"
      apt:
        name: [python3, python3-pip, python3-virtualenv, virtualenv]
        update_cache: yes
      become: yes
      become_user: root
      when: hostvars[inventory_hostname].ansible_distribution == 'Ubuntu'
    always:

    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3
    
    - name: copy django service file
      template:
        src: ../files/django/gunicorn.service.j2
        dest: "/etc/systemd/system/gunicorn.service"
      become: yes
      become_user: root
      notify: gunicorn service restart

    - name: ensure gunicorn service started
      service: 
        name: gunicorn
        state: started
        enabled: yes
      become: yes


  handlers:
    - name: restart gunicorn
      service:
        name: gunicorn
        state: restarted
      become: yes
